@{
    ViewBag.Title = "使用 Template Directives";
}

<h2>使用 Template Directives</h2>
<p>Template Directives如下表：</p>
<table class="list-table">
    <thead>
        <tr>
            <th>Directive</th>
            <th>描述</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>ng-cloak</td>
            <td>在文件載入完成之前，將元素套用樣式，將該元素隱藏。需在樣式表中加入該樣式，並設定為隱藏。</td>
        </tr>
        <tr>
            <td>ng-include</td>
            <td>載入HTML文件。</td>
        </tr>
        <tr>
            <td>ng-repeat</td>
            <td>列舉陣列中的資料。會逐一複製列舉資料，供 template 取用，且不影響原有資料。</td>
        </tr>
    </tbody>
</table>

<h2>實例如下：</h2>
<div ng-app="exampleApp" ng-controller="dayCtrl" class="demo">
    exampleApp 的 dayCtrl 作用範圍<br />
    
    使用 ng-repeat 將資料列舉到 template 中：<br />
    <ol>
        <li ng-repeat="day in days">{{day}}</li>
    </ol>
    <hr />
    <table class="list-table">
        <thead>
            <tr>
                <th>id</th>
                <th>name</th>
            </tr>
        </thead>
        <tbody>
            <tr ng-repeat="item in items">
                <td ng-bind="item.id"></td>
                <td ng-bind="item.name"></td>
            </tr>
        </tbody>
    </table>
    <hr />
    <ng-include src="'@Url.Content("~/Content/html/Page1.html")'"></ng-include>
    <span style="color:darkred">注意：src字串中，需要再以單引號將url包起來才可正確載入該HTML文件</span>
</div>

@section scripts{
    <script type="text/javascript">
        var myApp = angular.module("exampleApp", []);

        myApp.controller("dayCtrl", function ($scope) {
            $scope.days = ["星期日", "星期一", "星期二", "星期三",
                "星期四", "星期五", "星期六"];

            $scope.items = [
                { id: 1, name: 'item1' },
                { id: 2, name: 'item2' },
                { id: 3, name: 'item3' },
            ];
        });
    </script>
}