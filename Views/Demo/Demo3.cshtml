@{
    ViewBag.Title = "Demo3";
}

<h2>使用資料繫結的 Directives</h2>
<p>用於資料繫結的 Directives如下表：</p>
<table class="list-table">
    <thead>
        <tr>
            <th>Directive</th>
            <th>描述</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>ng-bind</td>
            <td>繫結於 HTML 元素的 innerText 屬性。為單向的資料繫結。</td>
        </tr>
        <tr>
            <td>ng-bind-html</td>
            <td>繫結於 HTML 元素的 innerHTML 屬性。為單向的資料繫結。<br />
            <span style="color:darkred">此用法不安全，AngularJS預設會攔截下來，並丟出例外。</span>
            </td>
        </tr>
        <tr>
            <td>ng-model</td>
            <td>建立雙向的資料繫結。</td>
        </tr>
        <tr>
            <td>ng-non-bindable</td>
            <td>設定某一區間的內容不進行資料繫結。</td>
        </tr>
    </tbody>
</table>

<h2>實例如下：</h2>
<div ng-app="exampleApp" ng-controller="dayCtrl" class="demo">
    exampleApp 的 dayCtrl 作用範圍<br />
    今天是 {{day || "(未知)"}} <span class="ng-non-bindable">(使用{{...}}進行inline資料繫結，為單向的資料繫結)</span><br />
    <hr />
    以下使用 資料繫結的 Directive 方式：<br />
    使用 ng-bind: <span ng-bind="htmlData"></span><br />
    使用 ng-model: <input type="text" ng-model="day" /> <span style="color:darkred">(此欄位為雙向資料繫結，修改此欄位值，會改到 $scope 的資料，繫結到相同資料的元素也會一併改變)</span><br />
    繫結至資料物件的屬性: <span ng-bind="item.name"></span>
</div>

@section scripts{
    <script type="text/javascript">
        var myApp = angular.module("exampleApp", []);

        myApp.controller("dayCtrl", function ($scope) {
            var dayNames = ["星期日", "星期一", "星期二", "星期三",
                "星期四", "星期五", "星期六"];

            $scope.day = dayNames[new Date().getDay()];
            $scope.htmlData = '<a href="#">Link</a>';
            $scope.item = {
                id: 1,
                name: '項目一'
            };
        });
    </script>
}